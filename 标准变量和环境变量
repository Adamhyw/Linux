1. PATH是常用的环境变量，执行命令时系统会到path定义的路径去找相关的执行方法
如果需要增加新路径，可以用这个命令
export PATH="$PATH:新路径"或者export PATH="新路径:$PATH" 前者把路径加在尾部，后者则加在头部

2. 打印结果使用单引号时，变量会按变量名打印，如
echo ‘$var’ 的显示结果则是$var

3. 给变量赋值时，不需要给变量名加美元符号。变量名和等号之间不能有空格

4.变量名命名规则：
命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。
中间不能有空格，可以使用下划线（_）。
不能使用标点符号。
不能使用bash里的关键字（可用help命令查看保留关键字）。

5. 使用一个定义过的变量，只要在变量名前面加美元符号即可。为了避免解释器错判，建议在引用变量时，加上花括号{}，如${变量名}

6. 在变量名前面加上#则可以获得字符串长度，如${#变量名}

7. 使用$shell可以查看当前调用的解释器是哪个

8. 对变量赋值后，该数值会被保存为字符串

9. 使用let命令可以对变量进行基本的算术操作，而且变量不需要使用$符号，但是只适合整数运算，格式为let 算术运算，如
let result=no1+no2

使用[]可以起到和let一样的效果，但是需要使用$符号，格式为$[算术运算]，如result=$[no1+no2]，

同样作用的还有(())，格式为$(())，如result=$((no1+no2))

以及expr，格式为$(expr 算术运算)，如result=$(expr $no1 + $no2)，但要注意算术运算符前后必须加空格，而且变量必须使用$

10. 对于浮点数运算和高级运算，需要使用bc，以下为示例：
a. 计算两个浮点数的乘法
echo ‘scale=n; 浮点数1*浮点数2’ | bc
说明-用管道符把第一个命令echo的输出作为第二个命令bc的输入；scale这个参数是用于指定小数点后保留几位；可以使用单引号作为计算内容的标识

b. 计算两个变量的乘法
echo "scale=n;$变量1*$变量2" | bc
说明-用管道符把第一个命令echo的输出作为第二个命令bc的输入；scale这个参数是用于指定小数点后保留几位；只能使用双引号作为计算内容的标识；变量必须加上$

c. 进制转换
echo "obase=10;ibase=16;ABCD" | bc
说明-obase代表输出结果的进制，这里是十进制；ibase代表输入结果的进制，这里是十六进制；如果需要转换的数值是十六进制，字母必须是大写；ABCD是待转换的数值，
如果是变量需要转换，则用$变量名来引用

